#+TITLE: Disentangle Things
#+AUTHOR: Ivan Hanigan
#+email: ivan.hanigan@anu.edu.au
#+LaTeX_CLASS: beamer 
#+LaTeX_HEADER: \usepackage{verbatim}
#+LaTeX_HEADER: \usepackage{fancyhdr} %For headers and footers
#+LaTeX_HEADER: \pagestyle{fancy} %For headers and footers
#+LaTeX_HEADER: \usepackage{lastpage} %For getting page x of y
#+LaTeX_HEADER: \usepackage{float} %Allows the figures to be positioned and formatted nicely
#+LaTeX_HEADER: \floatstyle{boxed} %using this
#+LaTeX_HEADER: \restylefloat{figure} %and this command
#+LaTeX_HEADER: \usepackage{url} %Formatting of yrls
#+LaTeX_HEADER: \lhead{DisentangleThings}
#+LaTeX_HEADER: \chead{}
#+LaTeX_HEADER: \rhead{\thepage\ of \pageref{LastPage}}
# LaTeX_HEADER: \lfoot{Left Footer}
# LaTeX_HEADER: \cfoot{Centre Footer}
# LaTeX_HEADER: \rfoot{\thepage\ of \pageref{LastPage}}

# I:\My Dropbox\tools\disentanglethings
* Introduction
\section{Introduction}
Helloworld

* Disentangle things
\section{Why?}
Why?
* transformations
\section{transformations}
My friend Joseph Guillame wrote the first version of this python script to take a simple plain text list of transformations and create a Graphviz graph.
If pydot and Graphviz are available, a png image of the graph and html version are also created.
The html version allows the nodes to be inspected by clicking on the box, the contents are displayed in a popout box.
I wrote the newnode function in the transformations.r script to construct the plain text input file while developing code in R.
* transformations example
#+name:transformations eg
#+begin_src R :session *R* :exports none :eval no
  dir()
  file.copy('src/transformations_test/reports/transformations_test_transformations.png', 'transformationstest.png')
#+end_src

\begin{figure}[H]
\begin{center}
\includegraphics[width=.5\textwidth]{transformationstest.png}
\end{center}
\caption{Some Plot}
\label{test}
\end{figure}
* Plans
** rgraphviz
I'd like to rewrite Joseph's python script to use Rgraphviz.

the document `How To Plot A Graph Using Rgraphviz' says Tooltips and hyperlinks on graphs
Users that want to create a clickable graph renderings with drill-down capability
should see the imageMap function in the biocGraph package.
#+name:rgraphviz test
#+begin_src R :session *R* :tangle src/rgraphviz-test.r :exports none :eval no
    # http://www.bioconductor.org/packages/2.9/bioc/html/Rgraphviz.html
      source("http://bioconductor.org/biocLite.R")
  # http://vladinformatics.blogspot.com.au/2012/03/my-experience-with-installing-rgraphviz.html
  # using ubuntu 12.04 make sure libgraphviz-dev is installed. It is needed for some header files (e.g. gvc.h)
  # then
       biocLite("Rgraphviz", configure.args=c("--with-graphviz=/usr"))
    # update all
    require(Rgraphviz)
    example(layoutGraph)
        
  
  set.seed(123)
  V <- letters[1:10]
  M <- 1:4
  g1 <- randomGraph(V, M, 0.2)
  plot(g1)  
  
  
  biocLite("biocGraph")
  require(biocGraph)
  # http://www.bioconductor.org/packages/release/bioc/vignettes/biocGraph/inst/doc/biocGraph.R
  data("integrinMediatedCellAdhesion")
  
  
  ###################################################
  ### code chunk number 51: dummyPlots
  ###################################################
  outdir=tempdir()
  nd = nodes(IMCAGraph)
  plotFiles = paste(seq(along=nd), 'png', sep='.')
  for(i in seq(along=nd)) {
    png(file.path(outdir, plotFiles[i]), width=400, height=600)
    plot(cumsum(rnorm(100)), type='l', col='blue', lwd=2, main=nd[i])
    dev.off()
  }
  
  
  ###################################################
  ### code chunk number 52: indexhtml
  ###################################################
  fhtml = file.path(outdir, "index.html")
  con = file(fhtml, open="wt")
  cat("<HTML><HEAD><TITLE>",
  "Integrin Mediated Cell Adhesion graph with tooltips and hyperlinks, please click on the nodes.",
  "</TITLE></HEAD>",
  "<FRAMESET COLS=\"3*,2*\" BORDER=0>",
  "  <FRAME SRC=\"graph.html\">",
  "  <FRAME NAME=\"nodedata\">",
  "</FRAMESET></HTML>", sep="\n", file=con)
  close(con)
  
  
  ###################################################
  ### code chunk number 53: makegraph (eval = FALSE)
  ###################################################
  ## width = 600
  ## height = 512
  ## imgname = "graph.png"
  ## png(file.path(outdir, imgname), width=width, height=height)
  ## par(mai=rep(0,4))
  ## 
  ## lg = agopen(IMCAGraph, name="foo", 
  ##   attrs = list(graph=list(rankdir="LR", rank=""), node=list(fixedsize=FALSE)), 
  ##   nodeAttrs = makeNodeAttrs(IMCAGraph), 
  ##   subGList = IMCAAttrs$subGList)
  ## plot(lg)    
  ##  
  ## con = file(file.path(outdir, "graph.html"), open="wt")
  ## writeLines("<html><body>\n", con)
  ## imageMap(lg, con=con,
  ##          tags=list(HREF=plotFiles,
  ##            TITLE = nd,
  ##            TARGET = rep("nodedata", length(nd))),
  ##          imgname=imgname, width=width, height=height)
  ## writeLines("</body></html>", con)
  ## close(con)
  ## dev.off()
  
  
  ###################################################
  ### code chunk number 54: browseurl
  ###################################################
  fhtml
  if(interactive())
    browseURL(fhtml)
  
#+end_src

